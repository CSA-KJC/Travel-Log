##                 GNU GENERAL PUBLIC LICENSE
##                   Version 3, 29 June 2007
##
##Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
##Everyone is permitted to copy and distribute verbatim copies
##of this license document, but changing it is not allowed.
##
##                        Preamble
##
##The GNU General Public License is a free, copyleft license for
##software and other kinds of works.
##
##The licenses for most software and other practical works are designed
##to take away your freedom to share and change the works.  By contrast,
##the GNU General Public License is intended to guarantee your freedom to
##share and change all versions of a program--to make sure it remains free
##software for all its users.  We, the Free Software Foundation, use the
##GNU General Public License for most of our software; it applies also to
##any other work released this way by its authors.  You can apply it to
##your programs, too.

#Katie Chiu
#Travel Log. Last update 10/18/18

from tkinter import *
from tkinter import ttk

class App:
    def __init__(self):
        self.content=Frame(root)

        self.items = Listbox(self.content, height=10, selectmode="SINGLE",exportselection=FALSE)  # listbox for items on sale
        self.items.bind("<<ListboxSelect>>")
        for b in ["Iceland","Canada","France", "United Kingdom", "Scotland", "Italy", "Greece", "Germany", "Spain", "Japan", "China", "Mongolia", "Malaysia", "Singapore", "South Korea", "Turkey", "India", "Morocco", "Egypt", "Mexico", "Costa Rica","Dominican Republic","Brazil", "Peru","New Zealand"]:
            self.items.insert(END, b)  # Adds values to listbox

        self.bar = ttk.Scrollbar(self.content, orient=VERTICAL, command=self.items.yview)
        self.items.configure(yscrollcommand=self.bar.set)  # attaches scrollbar to listbox

        self.write = Text(self.content, width=14, height=10, wrap=WORD)  # textbox
        self.write.bind("<FocusIn>")
        self.textshow = Label(self.content, text="Description")  # label for textbox

        self.spinvallabel=Label(self.content,text="Month")
        self.spinval = StringVar()
        self.s = Spinbox(self.content, values=("January","February","March","April","May","June","July","August","September","October","November","December"), textvariable=self.spinval, wrap=True, width=22,state="readonly")

        self.show = Label(self.content, text="Transportation")  # label for combobox
        self.choosevalue = StringVar()  # value for combobox
        self.choosevalue.set("")
        self.box = ttk.Combobox(self.content, state="readonly", textvariable=self.choosevalue)
        self.box["values"] = ["Air", "Train", "Car"]  # Types of shipment
        self.box.bind("<<ComboboxSelected>>")  # applies selected value

        self.submitbutton = Button(self.content, text="Submit",command=self.submit)
        self.clear = Button(self.content, text="Clear",command=self.clear)

        self.menubar=Menu(root)
        self.filemenu=Menu(self.menubar,tearoff=0)
        self.menubar.add_cascade(label="File",menu=self.filemenu)
        self.filemenu.add_command(label="Save", command=self.submit)
        self.filemenu.add_command(label="Exit", command=root.quit)

        self.error=Label(self.content)

        self.menubar2=Menu(root)
        self.helpmenu=Menu(self.menubar2,tearoff=0)
        self.menubar.add_cascade(label="Help",menu=self.helpmenu)
        self.helpmenu.add_command(label="About",command=self.new)
        root.config(menu=self.menubar)

        self.grip_frame = Frame(root)

        self.size = ttk.Sizegrip(self.grip_frame)

        self.content.grid(column=0, row=0)
        self.error.grid(column=3,row=4,sticky=N)
        self.items.grid(column=0,row=0,rowspan=4,sticky=NS)
        self.box.grid(column=3, row=1,sticky=N,padx=(10,0))  # grid for items/combobox
        self.bar.grid(column=1, row=0, rowspan=4, sticky=NS,padx=(0, 20))
        self.write.grid(column=2, row=1,rowspan=3)  # textbox grid
        self.textshow.grid(column=2,row=0)
        self.spinvallabel.grid(column=3,row=1,sticky=S,pady=(15,0))
        self.s.grid(column=3, row=2,sticky=N,pady=(0,15),padx=(12,0))
        self.show.grid(column=3, row=0)
        self.submitbutton.grid(column=3, row=2,sticky=S,pady=(15,5))
        self.clear.grid(column=3, row=3,sticky=N,pady=(0))
        self.size.grid(column=999, row=999, sticky=(NSEW))
        self.grip_frame.grid(column=999, row=999)

        root.columnconfigure(0, weight=1)  # weight for rows and columns
        root.rowconfigure(0, weight=1)
        root.minsize(450, 250)
        self.grip_frame.columnconfigure(999, weight=1)
        self.grip_frame.rowconfigure(999, weight=1)

    def clear(self):
        self.write.delete("1.0", END)
        self.spinval.set("January")
        self.choosevalue.set("")
        self.items.bind(self.items.selection_clear(0, END))
        self.error.config(text="")

    def submit(self):
        z=0
        values = [self.items.get(idx) for idx in self.items.curselection()]
        textvalue = self.write.get("1.0", 'end-1c')
        month=self.spinval.get()
        transport=self.choosevalue.get()
        if any(x in "abcdefghijklmnopqrstuvwxyz" for x in textvalue):
            self.x=[]
            self.x.append(values)
            self.x.append(textvalue)
            self.x.append(month)
            self.x.append(transport)
            for y in self.x:
                if y=="" or y==0 or y==[]:
                    self.error.config(text="Error")
                    z=1
        else:
            z=1
            self.error.config(text="Error")
        if z==0:
            str1 = ' '.join(str(e) for e in self.x)
            file = open("travel_log.txt", "a")
            file.write(str1)
            file.write("\n")
            file.close()
            self.write.delete("1.0", END)
            self.spinval.set("January")
            self.choosevalue.set("")
            self.items.bind(self.items.selection_clear(0, END))
            self.error.config(text="Submitted")

    def new(self):
        top = Toplevel(root, padx=15, pady=15)
        top.title("About")
        msg = Message(top, text="Travel Log\nVersion 1.0\nKatie Chiu")
        msg.pack()
        button = Button(top, text="Close", command=top.destroy)
        button.pack()
        top.geometry("215x110")
        top.resizable(width=False, height=False)

root=Tk()
app=App()
root.title("Travel Log")
root.mainloop()
root.destroy()
